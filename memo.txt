tag/rating/unrate, tag/proposal/propose -> クエリで127(評価の取り消し)を直接指定している
tag/rating/getの実装



リファクタリング
127マジックナンバーを無くす

session/manage_sessionのDDoS対策(セッションIDを破棄してreq→発行→破棄でreqへの対策)
rate_limit/interpreter/rate_limitでキャッシュができていない

tag/propose/intepreter/validate_topology
→ unpagedを使っているが後に問題になるのでiterに変更する
→ is_unstable_proposalがenum化されていない
→ テストも必要そう

tag/list/interpreterにunwrap()が沢山

redis_tag_info構造体はcommonフォルダにあるべきではない？

tag/searchの検索処理内のunwrap()

common/password.rsのデータ読み込み処理がよく抽象化されていない


自動テスト
verify_email/interpreter, session_manager/interpreter/reauthenticate
→Redisから取得した文字列の解析にテストが無い
→テストは必要か？
tags/proposal/propose, withdraw



設定
common/email/resend.rsのAPIキーがない
middlewares/quota_limit/interpreter -> DBへのクエリ(貢献度取得)が未記述



検証
tag/list/interpreter -> withscoresからの値の取得方法が適切か不明, タグ名取得クエリでキーの順番に名前が返されるかどうか不明
rate_limit/interpreter/rate_limit, api_key/interpreter -> ScyllaDBのキャッシュを使い、Redisを使ってないので速度の問題が出る可能性